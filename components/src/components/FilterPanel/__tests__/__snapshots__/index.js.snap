// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FilterPanel /> snapshots Expect snapshot to match with props 1`] = `
.c11 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgba(1,129,187,1);
  border: 0 none;
  color: white;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font: 400 13px/1 Lato;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  min-height: 36px;
  outline: none;
  padding: 16px;
  -webkit-transition: background 0.195s cubic-bezier(0.4,0,0.2,1);
  transition: background 0.195s cubic-bezier(0.4,0,0.2,1);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 100%;
}

.c11:hover,
.c11:focus {
  background: rgba(0,114,165,1);
}

.c11:active {
  background: rgba(0,114,165,1);
}

.c11:disabled {
  opacity: 0.3;
  pointer-events: none;
}

.c6 {
  padding: 0;
  position: relative;
}

.c7 {
  border: 0;
  border-bottom: 1px solid rgba(227,232,236,1);
  font: 400 13px/ 1 'Lato';
  outline: none;
  padding: 8px 8px 16px 24px;
  width: 100%;
}

.c7::selection {
  background: rgba(0,129,187,1);
  color: white;
}

.c7::-webkit-input-placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7::-moz-placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7:-ms-input-placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7::placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7:focus {
  color: rgba(0,129,187,1);
  font-weight: 400;
}

.c8 {
  bottom: 15px;
  color: rgba(60,79,114,0.6);
  position: absolute;
  z-index: 1;
}

.c0 {
  background: white;
  border-left: 1px solid rgba(216,216,216,0.8);
  border-right: 1px solid rgba(216,216,216,0.8);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-width: 336px;
  overflow: hidden;
  position: relative;
}

.c5 {
  position: relative;
}

.c4 {
  background: transparent;
  border: 0 none;
  color: rgba(11,26,52,1);
  cursor: pointer;
  display: inline-block;
  font: 300 13px/1 'Lato';
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  opacity: 0.3;
  outline: none;
  padding: 16px 0 0;
  position: absolute;
  right: 0;
  top: 0;
  -webkit-transition: opacity 0.195s cubic-bezier(0,0,0.2,1);
  transition: opacity 0.195s cubic-bezier(0,0,0.2,1);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: auto;
  z-index: 1;
}

.c4:hover {
  color: rgba(0,129,187,1);
  opacity: 1;
}

.c4:disabled {
  opacity: 0;
  pointer-events: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  opacity: 1;
  overflow: hidden;
  position: relative;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  -webkit-transition: -webkit-transform 0.195s cubic-bezier(0.4,0,1,1);
  -webkit-transition: transform 0.195s cubic-bezier(0.4,0,1,1);
  transition: transform 0.195s cubic-bezier(0.4,0,1,1);
  width: 672px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  width: 336px;
}

.c3 {
  -webkit-flex: 0 0 72px;
  -ms-flex: 0 0 72px;
  flex: 0 0 72px;
  margin: 0 16px;
  min-height: 72px;
  padding: 24px 0 0;
  position: relative;
}

.c9 {
  background: white;
  -webkit-flex: 1 1 0;
  -ms-flex: 1 1 0;
  flex: 1 1 0;
  margin: 0;
  overflow: auto;
  padding: 16px 0;
  position: relative;
  width: 100%;
}

.c10 {
  background: white;
  -webkit-flex: 0 0 72px;
  -ms-flex: 0 0 72px;
  flex: 0 0 72px;
  margin: auto 0 0;
  min-height: 72px;
  padding: 16px;
  width: 100%;
}

.c12 {
  -webkit-flex: 0 0 336px;
  -ms-flex: 0 0 336px;
  flex: 0 0 336px;
  overflow: hidden;
  max-width: 336px;
  position: relative;
  width: 336px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <header
        className="c3"
      >
        <button
          className="c4"
          onClick={[Function]}
        >
          Clear all filters
        </button>
        <div
          className="c5"
        >
          <div
            className="c6"
          >
            <input
              className="c7"
              onChange={[Function]}
              placeholder="Filter"
              type="text"
              value=""
            />
            <div
              className="c8"
            >
              <svg
                viewBox="0 0 17 17"
                width="15px"
              >
                <g
                  fill="none"
                  stroke="none"
                  strokeLinecap="round"
                  strokeWidth="1"
                >
                  <g
                    stroke="currentColor"
                    strokeWidth="2"
                    transform="translate(1.000000, 1.000000)"
                  >
                    <g>
                      <circle
                        cx="6.5"
                        cy="6.5"
                        r="6"
                      />
                      <path
                        d="M14.5,14.5 L10.742,10.742"
                      />
                    </g>
                  </g>
                </g>
              </svg>
            </div>
          </div>
        </div>
      </header>
      <div
        className="c9"
      />
      <div
        className="c10"
      >
        <button
          className="c11"
          disabled={undefined}
          onClick={[Function]}
        >
          Done
        </button>
      </div>
    </div>
    <div
      className="c12"
    />
  </div>
</div>
`;

exports[`<FilterPanel /> snapshots Expect snapshot to match without props 1`] = `
.c11 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: rgba(1,129,187,1);
  border: 0 none;
  color: white;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font: 400 13px/1 Lato;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  min-height: 36px;
  outline: none;
  padding: 16px;
  -webkit-transition: background 0.195s cubic-bezier(0.4,0,0.2,1);
  transition: background 0.195s cubic-bezier(0.4,0,0.2,1);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 100%;
}

.c11:hover,
.c11:focus {
  background: rgba(0,114,165,1);
}

.c11:active {
  background: rgba(0,114,165,1);
}

.c11:disabled {
  opacity: 0.3;
  pointer-events: none;
}

.c6 {
  padding: 0;
  position: relative;
}

.c7 {
  border: 0;
  border-bottom: 1px solid rgba(227,232,236,1);
  font: 400 13px/ 1 'Lato';
  outline: none;
  padding: 8px 8px 16px 24px;
  width: 100%;
}

.c7::selection {
  background: rgba(0,129,187,1);
  color: white;
}

.c7::-webkit-input-placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7::-moz-placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7:-ms-input-placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7::placeholder {
  color: rgba(11,26,52,0.5);
  font: 400 13px/ 1 'Lato';
}

.c7:focus {
  color: rgba(0,129,187,1);
  font-weight: 400;
}

.c8 {
  bottom: 15px;
  color: rgba(60,79,114,0.6);
  position: absolute;
  z-index: 1;
}

.c0 {
  background: white;
  border-left: 1px solid rgba(216,216,216,0.8);
  border-right: 1px solid rgba(216,216,216,0.8);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-width: 336px;
  overflow: hidden;
  position: relative;
}

.c5 {
  position: relative;
}

.c4 {
  background: transparent;
  border: 0 none;
  color: rgba(11,26,52,1);
  cursor: pointer;
  display: inline-block;
  font: 300 13px/1 'Lato';
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  opacity: 0.3;
  outline: none;
  padding: 16px 0 0;
  position: absolute;
  right: 0;
  top: 0;
  -webkit-transition: opacity 0.195s cubic-bezier(0,0,0.2,1);
  transition: opacity 0.195s cubic-bezier(0,0,0.2,1);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: auto;
  z-index: 1;
}

.c4:hover {
  color: rgba(0,129,187,1);
  opacity: 1;
}

.c4:disabled {
  opacity: 0;
  pointer-events: none;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  opacity: 1;
  overflow: hidden;
  position: relative;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  -webkit-transition: -webkit-transform 0.195s cubic-bezier(0.4,0,1,1);
  -webkit-transition: transform 0.195s cubic-bezier(0.4,0,1,1);
  transition: transform 0.195s cubic-bezier(0.4,0,1,1);
  width: 672px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  width: 336px;
}

.c3 {
  -webkit-flex: 0 0 72px;
  -ms-flex: 0 0 72px;
  flex: 0 0 72px;
  margin: 0 16px;
  min-height: 72px;
  padding: 24px 0 0;
  position: relative;
}

.c9 {
  background: white;
  -webkit-flex: 1 1 0;
  -ms-flex: 1 1 0;
  flex: 1 1 0;
  margin: 0;
  overflow: auto;
  padding: 16px 0;
  position: relative;
  width: 100%;
}

.c10 {
  background: white;
  -webkit-flex: 0 0 72px;
  -ms-flex: 0 0 72px;
  flex: 0 0 72px;
  margin: auto 0 0;
  min-height: 72px;
  padding: 16px;
  width: 100%;
}

.c12 {
  -webkit-flex: 0 0 336px;
  -ms-flex: 0 0 336px;
  flex: 0 0 336px;
  overflow: hidden;
  max-width: 336px;
  position: relative;
  width: 336px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <header
        className="c3"
      >
        <button
          className="c4"
          onClick={undefined}
        >
          Clear all filters
        </button>
        <div
          className="c5"
        >
          <div
            className="c6"
          >
            <input
              className="c7"
              onChange={[Function]}
              placeholder="Filter"
              type="text"
              value=""
            />
            <div
              className="c8"
            >
              <svg
                viewBox="0 0 17 17"
                width="15px"
              >
                <g
                  fill="none"
                  stroke="none"
                  strokeLinecap="round"
                  strokeWidth="1"
                >
                  <g
                    stroke="currentColor"
                    strokeWidth="2"
                    transform="translate(1.000000, 1.000000)"
                  >
                    <g>
                      <circle
                        cx="6.5"
                        cy="6.5"
                        r="6"
                      />
                      <path
                        d="M14.5,14.5 L10.742,10.742"
                      />
                    </g>
                  </g>
                </g>
              </svg>
            </div>
          </div>
        </div>
      </header>
      <div
        className="c9"
      />
      <div
        className="c10"
      >
        <button
          className="c11"
          disabled={undefined}
          onClick={[Function]}
        >
          Done
        </button>
      </div>
    </div>
    <div
      className="c12"
    />
  </div>
</div>
`;
