// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Carousel /> snapshot renders correctly 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: relative;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  height: 100%;
  left: 0;
  position: relative;
  top: 0;
  -webkit-transform: translate3d(-0px,0,0);
  -ms-transform: translate3d(-0px,0,0);
  transform: translate3d(-0px,0,0);
  -webkit-transition: -webkit-transform 0.225s cubic-bezier(0.4,0,0.6,1);
  -webkit-transition: transform 0.225s cubic-bezier(0.4,0,0.6,1);
  transition: transform 0.225s cubic-bezier(0.4,0,0.6,1);
  width: 0px;
}

.c3 {
  min-height: 1px;
  opacity: 1;
  -webkit-transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  width: 0px;
  bottom: 0;
  position: absolute;
  top: 0;
  display: block;
  left: 0px;
}

.c4 {
  height: 100%;
  width: 0;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 2px solid black;
  display: none;
  -webkit-flex: 0 0 64px;
  -ms-flex: 0 0 64px;
  flex: 0 0 64px;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 24px 16px;
  width: 100%;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 0 transparent;
  color: white;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 40px;
  -ms-flex: 0 0 40px;
  flex: 0 0 40px;
  height: 40px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  opacity: 1;
  outline: none;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  -webkit-transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  width: 40px;
}

.c6:hover {
  opacity: 1;
}

.c9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 0 transparent;
  color: white;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 40px;
  -ms-flex: 0 0 40px;
  flex: 0 0 40px;
  height: 40px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  opacity: 1;
  outline: none;
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
  -webkit-transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  width: 40px;
}

.c9:hover {
  opacity: 1;
}

.c7 {
  background: transparent;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0 0 0 -8px;
}

.c8 {
  cursor: pointer;
  opacity: 1;
  padding: 16px 8px;
  -webkit-transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
}

.c8::before {
  background: white;
  border-radius: 50%;
  content: '';
  display: block;
  height: 8px;
  width: 8px;
}

.c8:hover {
  opacity: 1;
}

<Carousel
  firstSlide={0}
  responsive={true}
  width={540}
>
  <styled.div
    innerRef={[Function]}
  >
    <div
      className="c0"
    >
      <styled.div
        width="100%"
      >
        <div
          className="c1"
          width="100%"
        >
          <styled.div
            position="-0px"
            width="0px"
          >
            <div
              className="c2"
              width="0px"
            >
              <styled.div
                active={true}
                key="0"
                position={0}
                width={0}
              >
                <div
                  className="c3"
                  width={0}
                >
                  <styled.div
                    width={0}
                  >
                    <div
                      className="c4"
                      width={0}
                    >
                       
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </div>
          </styled.div>
        </div>
      </styled.div>
      <styled.div
        active={false}
      >
        <div
          className="c5"
        >
          <styled.button
            onClick={[Function]}
            previous={true}
          >
            <button
              className="c6"
              onClick={[Function]}
            >
              <IconChevron
                fillColor="currentColor"
                percent={false}
                width={24}
              >
                <svg
                  viewBox="0 0 11 7"
                  width="24px"
                >
                  <g
                    fill="none"
                    stroke="none"
                    strokeWidth="1"
                  >
                    <g
                      stroke="currentColor"
                      strokeWidth="1.2"
                      transform="translate(-321.000000, -147.000000)"
                    >
                      <polyline
                        points="324.045716 144.990072 329.062822 150.007178 324.009928 155.060072"
                        transform="translate(326.536375, 150.025072) rotate(90.000000) translate(-326.536375, -150.025072) "
                      />
                    </g>
                  </g>
                </svg>
              </IconChevron>
            </button>
          </styled.button>
          <styled.div>
            <div
              className="c7"
            >
              <styled.div
                active={true}
                key="0"
                onClick={[Function]}
              >
                <div
                  className="c8"
                  onClick={[Function]}
                />
              </styled.div>
            </div>
          </styled.div>
          <styled.button
            onClick={[Function]}
          >
            <button
              className="c9"
              onClick={[Function]}
            >
              <IconChevron
                fillColor="currentColor"
                percent={false}
                width={24}
              >
                <svg
                  viewBox="0 0 11 7"
                  width="24px"
                >
                  <g
                    fill="none"
                    stroke="none"
                    strokeWidth="1"
                  >
                    <g
                      stroke="currentColor"
                      strokeWidth="1.2"
                      transform="translate(-321.000000, -147.000000)"
                    >
                      <polyline
                        points="324.045716 144.990072 329.062822 150.007178 324.009928 155.060072"
                        transform="translate(326.536375, 150.025072) rotate(90.000000) translate(-326.536375, -150.025072) "
                      />
                    </g>
                  </g>
                </svg>
              </IconChevron>
            </button>
          </styled.button>
        </div>
      </styled.div>
    </div>
  </styled.div>
</Carousel>
`;

exports[`<Carousel /> snapshot renders correctly without props 1`] = `
.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: relative;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  height: 100%;
  left: 0;
  position: relative;
  top: 0;
  -webkit-transform: translate3d(-0px,0,0);
  -ms-transform: translate3d(-0px,0,0);
  transform: translate3d(-0px,0,0);
  -webkit-transition: -webkit-transform 0.225s cubic-bezier(0.4,0,0.6,1);
  -webkit-transition: transform 0.225s cubic-bezier(0.4,0,0.6,1);
  transition: transform 0.225s cubic-bezier(0.4,0,0.6,1);
  width: 0px;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  border-top: 2px solid black;
  display: none;
  -webkit-flex: 0 0 64px;
  -ms-flex: 0 0 64px;
  flex: 0 0 64px;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 24px 16px;
  width: 100%;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 0 transparent;
  color: white;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 40px;
  -ms-flex: 0 0 40px;
  flex: 0 0 40px;
  height: 40px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  opacity: 1;
  outline: none;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  -webkit-transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  width: 40px;
}

.c4:hover {
  opacity: 1;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 0 transparent;
  color: white;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 0 40px;
  -ms-flex: 0 0 40px;
  flex: 0 0 40px;
  height: 40px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  opacity: 1;
  outline: none;
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
  -webkit-transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  transition: opacity .225s cubic-bezier(0.4,0.0,0.2,1);
  width: 40px;
}

.c6:hover {
  opacity: 1;
}

.c5 {
  background: transparent;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 0 0 0 -8px;
}

<Carousel
  responsive={true}
  width={540}
>
  <styled.div
    innerRef={[Function]}
  >
    <div
      className="c0"
    >
      <styled.div
        width="100%"
      >
        <div
          className="c1"
          width="100%"
        >
          <styled.div
            position="-0px"
            width="0px"
          >
            <div
              className="c2"
              width="0px"
            />
          </styled.div>
        </div>
      </styled.div>
      <styled.div
        active={false}
      >
        <div
          className="c3"
        >
          <styled.button
            onClick={[Function]}
            previous={true}
          >
            <button
              className="c4"
              onClick={[Function]}
            >
              <IconChevron
                fillColor="currentColor"
                percent={false}
                width={24}
              >
                <svg
                  viewBox="0 0 11 7"
                  width="24px"
                >
                  <g
                    fill="none"
                    stroke="none"
                    strokeWidth="1"
                  >
                    <g
                      stroke="currentColor"
                      strokeWidth="1.2"
                      transform="translate(-321.000000, -147.000000)"
                    >
                      <polyline
                        points="324.045716 144.990072 329.062822 150.007178 324.009928 155.060072"
                        transform="translate(326.536375, 150.025072) rotate(90.000000) translate(-326.536375, -150.025072) "
                      />
                    </g>
                  </g>
                </svg>
              </IconChevron>
            </button>
          </styled.button>
          <styled.div>
            <div
              className="c5"
            />
          </styled.div>
          <styled.button
            onClick={[Function]}
          >
            <button
              className="c6"
              onClick={[Function]}
            >
              <IconChevron
                fillColor="currentColor"
                percent={false}
                width={24}
              >
                <svg
                  viewBox="0 0 11 7"
                  width="24px"
                >
                  <g
                    fill="none"
                    stroke="none"
                    strokeWidth="1"
                  >
                    <g
                      stroke="currentColor"
                      strokeWidth="1.2"
                      transform="translate(-321.000000, -147.000000)"
                    >
                      <polyline
                        points="324.045716 144.990072 329.062822 150.007178 324.009928 155.060072"
                        transform="translate(326.536375, 150.025072) rotate(90.000000) translate(-326.536375, -150.025072) "
                      />
                    </g>
                  </g>
                </svg>
              </IconChevron>
            </button>
          </styled.button>
        </div>
      </styled.div>
    </div>
  </styled.div>
</Carousel>
`;
